name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.7.3)'
        required: true
        type: string

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10'

jobs:
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate version sync
        run: pnpm version:check

      - name: Validate IPC types
        run: pnpm ipc:validate

      - name: TypeScript check
        run: pnpm typecheck

      - name: Lint check
        run: pnpm lint

      - name: Guard checks
        run: |
          pnpm guard:external
          pnpm guard:pdf

  build-windows:
    name: Build Windows Release
    runs-on: windows-latest
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Build and publish release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm release:publish

      - name: Validate release assets
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm guard:release:assets

  notify:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: build-windows
    if: success()
    steps:
      - name: Release notification
        run: |
          echo "ðŸš€ Release successful!"
          echo "Version: ${{ github.ref_name }}"
          echo "Assets published to GitHub Releases"