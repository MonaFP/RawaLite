{"version":3,"sources":["../electron/logger.ts"],"sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\nimport { app } from 'electron';\n\nexport function createLogger() {\n  const logDir = path.join(app.getPath('appData'), 'RaWaLite');\n  fs.ensureDirSync(logDir);\n  const logFile = path.join(logDir, 'rawalite.log');\n\n  function write(level: string, msg: string) {\n    const line = `[${new Date().toISOString()}] [${level}] ${msg}\\n`;\n    fs.appendFileSync(logFile, line, 'utf8');\n    if (process.env.NODE_ENV !== 'production') console.log(line.trim());\n  }\n\n  return {\n    info: (m: string) => write('INFO', m),\n    error: (m: string) => write('ERROR', m),\n    debug: (m: string) => write('DEBUG', m),\n    path: logFile,\n  };\n}"],"mappings":";AAAA,OAAO,QAAQ;AACf,OAAO,UAAU;AACjB,SAAS,WAAW;AAEb,SAAS,eAAe;AAC7B,QAAM,SAAS,KAAK,KAAK,IAAI,QAAQ,SAAS,GAAG,UAAU;AAC3D,KAAG,cAAc,MAAM;AACvB,QAAM,UAAU,KAAK,KAAK,QAAQ,cAAc;AAEhD,WAAS,MAAM,OAAe,KAAa;AACzC,UAAM,OAAO,KAAI,oBAAI,KAAK,GAAE,YAAY,CAAC,MAAM,KAAK,KAAK,GAAG;AAAA;AAC5D,OAAG,eAAe,SAAS,MAAM,MAAM;AACvC,QAAI,QAAQ,IAAI,aAAa,aAAc,SAAQ,IAAI,KAAK,KAAK,CAAC;AAAA,EACpE;AAEA,SAAO;AAAA,IACL,MAAM,CAAC,MAAc,MAAM,QAAQ,CAAC;AAAA,IACpC,OAAO,CAAC,MAAc,MAAM,SAAS,CAAC;AAAA,IACtC,OAAO,CAAC,MAAc,MAAM,SAAS,CAAC;AAAA,IACtC,MAAM;AAAA,EACR;AACF;","names":[]}